"use strict";(self.webpackChunkstudy_notes=self.webpackChunkstudy_notes||[]).push([[1970],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var a=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(n),h=s,m=p["".concat(c,".").concat(h)]||p[h]||d[h]||r;return n?a.createElement(m,o(o({ref:t},u),{},{components:n})):a.createElement(m,o({ref:t},u))}));function h(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,o=new Array(r);o[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:s,o[1]=i;for(var l=2;l<r;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4860:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return d}});var a=n(7462),s=n(3366),r=(n(7294),n(3905)),o=["components"],i={sidebar_position:5},c="JavaScript Review",l={unversionedId:"tutorial-extras/JavaScript review",id:"tutorial-extras/JavaScript review",title:"JavaScript Review",description:"Classes",source:"@site/docs/tutorial-extras/JavaScript review.md",sourceDirName:"tutorial-extras",slug:"/tutorial-extras/JavaScript review",permalink:"/studyNotes/docs/tutorial-extras/JavaScript review",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-extras/JavaScript review.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Git",permalink:"/studyNotes/docs/tutorial-extras/git"},next:{title:"Components",permalink:"/studyNotes/docs/My personal REACT notes/Setting up a project"}},u={},d=[{value:"Classes",id:"classes",level:2},{value:"Class Syntax",id:"class-syntax",level:2},{value:"Class declaration",id:"class-declaration",level:2},{value:"Class expressions",id:"class-expressions",level:2},{value:"Class body and method definitions",id:"class-body-and-method-definitions",level:2},{value:"Constructor",id:"constructor",level:2},{value:"Instances",id:"instances",level:2},{value:"Subclassing with the keyword extends",id:"subclassing-with-the-keyword-extends",level:2},{value:"Functions",id:"functions",level:2}],p={toc:d};function h(e){var t=e.components,n=(0,s.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"javascript-review"},"JavaScript Review"),(0,r.kt)("h2",{id:"classes"},"Classes"),(0,r.kt)("p",null,"Classes are tools that are used by developers to create similar objects. They are useful in debugging and maintaining code and helps in avoiding code repetitions."),(0,r.kt)("p",null,"There are similarities between the class and object syntax in JavaScript except that classes use the constructor method and objects do not. JavaScript calls the constructor method everytime it creates a new instance of a class."),(0,r.kt)("p",null,"It is best practice to capitalize and CamelCase class names."),(0,r.kt)("h2",{id:"class-syntax"},"Class Syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},"class ExampleOfClass {\n  constructor(name, department){\n      this.name = name;\n      this.department = department;\n  }\n}\n")),(0,r.kt)("p",null,"Classes are a template for creating objects, they encapsulate data with code to work on the data."),(0,r.kt)("h2",{id:"class-declaration"},"Class declaration"),(0,r.kt)("p",null,"To declare a class, you use class keyword with the name of the class. Example below;"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},"class Rectangle {\n  constructor (height, width){\n      this.height = height;\n      this.width = width;\n  }\n}\n")),(0,r.kt)("p",null,"It is important to remember that classes must be defined before they can be constructed."),(0,r.kt)("h2",{id:"class-expressions"},"Class expressions"),(0,r.kt)("p",null,"This is another way to define a class. Class expressions can be named or unnamed. The name given to a named class expression is local to the class's body and it can be accessed via the name property. Example below;"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'// unnamed\nlet Rectangle = class {\n  constructor(height, width) {\n    this.height = height;\n    this.width = width;\n  }\n};\nconsole.log(Rectangle.name);\n// output: "Rectangle"\n\n// named\nlet Rectangle = class Rectangle2 {\n  constructor(height, width) {\n    this.height = height;\n    this.width = width;\n  }\n};\nconsole.log(Rectangle.name);\n// output: "Rectangle2"\n')),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},(0,r.kt)("strong",{parentName:"p"},"Class Expressions")," must be declared before they can be used."))),(0,r.kt)("h2",{id:"class-body-and-method-definitions"},"Class body and method definitions"),(0,r.kt)("p",null,"The body of a class is the part in curly braces, and this is where we define the class members like methods or constructors."),(0,r.kt)("p",null,"The body of the class is executed in strict mode and code written here is subject to stict syntax for increased perfomance and some keywords are reserved for future versions of ECMAscript."),(0,r.kt)("h2",{id:"constructor"},"Constructor"),(0,r.kt)("p",null,"The constructor method is a special method that is used for creating and initilizing an object created with a class. There can only be one method with the name constructor in a class, otherwise an error will be thrown."),(0,r.kt)("p",null,"The super keyword can be used to call the constructor of the super class."),(0,r.kt)("p",null,"JavaScript invokes the constructor method everytime we create a new instance. The constructor method accepts one argument."),(0,r.kt)("p",null,"Inside the constructor method we use the this keyword. 'this' can refer to an instance of that class."),(0,r.kt)("h2",{id:"instances"},"Instances"),(0,r.kt)("p",null,"Instances are objects that contain the property names and methods of a class, but with unique property values."),(0,r.kt)("p",null,"We use the 'new' keyword to generate a new instance of a class. The 'new' keyword calls the constructor method 'constructor()' runs the code inside of it, and then returns the new instance."),(0,r.kt)("h2",{id:"subclassing-with-the-keyword-extends"},"Subclassing with the keyword extends"),(0,r.kt)("p",null,"The keyword extends is used in class declarations or class expressions to create a class as a child of another class. Example;"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},"class animal {\n  constructor (name) {\n    this.name = name;\n  }\n  \n  speak () {\n    console.log(`${this.name} makes a noise.`);\n  }\n}\n\nclass Dog extends Animal {\n  constructor (name) {\n    super(name); // call the super class constructor and pass in the name parameter.\n  }\n\n  speak () {\n    console.log(`${this.name} barks.`);\n  }\n}\n\nlet d = new Dog('Buffie');\nd.speak(); // Buffie barks.\n")),(0,r.kt)("p",null,"If there is a constructor present in the subclass, it needs to first call super() before using 'this'."),(0,r.kt)("p",null,"We can also extend traditional function based classes. Example;"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},"function Animal (name) {\n  this.name = name\n}\n\nAnimal.prototype.speak = function() {\n  console.log(`${this.name} makes a noise.`);\n}\n\nclass Dog extends Animal {\n  speak(){\n    console.log(`${this.name} barks.`);\n  }\n}\n\nlet d = new Dog('Buffie');\nd.speak(); // Buffie barks.\n")),(0,r.kt)("p",null,"::: note"),(0,r.kt)("p",null,"Classes cannot extend regular non-constructible objects. If we want to inherit from a regular object we can instead use Object.setPrototypeOf():"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},"const Animal = {\n  speak(){\n    console.log(`${this.name} makes a noise.`);\n  }\n};\n\nclass Dog {\n  constuructor (name) {\n    this.name = name;\n  }\n}\n// if we do not do this we will get a TypeError when we invoke speak \nObject.setPrototypeOf(Dog.prototype, Animal);\nlet d = new Dog('Buffie');\nd.speak(); // Buffie makes a noise.\n")),(0,r.kt)("h2",{id:"functions"},"Functions"))}h.isMDXComponent=!0}}]);